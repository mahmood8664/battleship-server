// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Mahmoud AllamehAmiri",
            "email": "m.allamehamiri@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/game": {
            "post": {
                "description": "create a new battleship game instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Create game",
                "parameters": [
                    {
                        "description": "Create Game Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateGameRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game successfully created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateGameResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/game/join": {
            "post": {
                "description": "Join to a battleship game instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Join game",
                "parameters": [
                    {
                        "description": "Join Game Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.JoinGameRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Join Game successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GetGameResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/game/move-ship": {
            "post": {
                "description": "Move ship to new locaiton",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Move ship",
                "parameters": [
                    {
                        "description": "Join Game Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MoveShipRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Join Game successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GetGameResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/game/submit-ships": {
            "post": {
                "description": "submit ship locations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "submit ship locations",
                "parameters": [
                    {
                        "description": "Submit ships Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SubmitShipsLocationsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Submit ships successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.GetGameResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/game/{game_id}": {
            "get": {
                "description": "Get game info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get game",
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "game_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game successfully created",
                        "schema": {
                            "$ref": "#/definitions/dto.GetGameResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/user": {
            "post": {
                "description": "create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "Create User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUserResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/user/{user_id}": {
            "get": {
                "description": "Get user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "string",
                        "description": " ",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game successfully created",
                        "schema": {
                            "$ref": "#/definitions/dto.UserDto"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.BattleError": {
            "type": "object",
            "properties": {
                "error_code": {
                    "type": "integer"
                },
                "error_data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "error_message": {
                    "type": "string"
                }
            }
        },
        "dto.CreateGameRequest": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "string"
                }
            }
        },
        "dto.CreateGameResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "$ref": "#/definitions/dto.BattleError"
                },
                "game_id": {
                    "type": "string"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "dto.CreateUserRequest": {
            "type": "object",
            "properties": {
                "mobile": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CreateUserResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "$ref": "#/definitions/dto.BattleError"
                },
                "id": {
                    "type": "string"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "dto.GameDto": {
            "type": "object",
            "properties": {
                "create_date": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_move_time": {
                    "type": "string"
                },
                "move_timeout_sec": {
                    "type": "integer"
                },
                "side_1_user_id": {
                    "type": "string"
                },
                "side_2_user_id": {
                    "type": "string"
                },
                "state": {
                    "type": "object",
                    "$ref": "#/definitions/dto.GameState"
                },
                "status": {
                    "type": "string"
                },
                "turn": {
                    "type": "integer"
                },
                "winner": {
                    "type": "string"
                }
            }
        },
        "dto.GameState": {
            "type": "object",
            "properties": {
                "side_1": {
                    "description": "map index -\u003e is hidden",
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "side_1_ships": {
                    "description": "map index -\u003e is ship exist",
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "side_2": {
                    "description": "map index -\u003e is hidden",
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "side_2_ships": {
                    "description": "map index -\u003e is ship exist",
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                }
            }
        },
        "dto.GetGameResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "$ref": "#/definitions/dto.BattleError"
                },
                "game": {
                    "type": "object",
                    "$ref": "#/definitions/dto.GameDto"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        },
        "dto.JoinGameRequest": {
            "type": "object",
            "properties": {
                "game_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "dto.MoveShipRequest": {
            "type": "object"
        },
        "dto.SubmitShipsLocationsRequest": {
            "type": "object",
            "properties": {
                "game_id": {
                    "type": "string"
                },
                "ships_indexes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "dto.UserDto": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "$ref": "#/definitions/dto.BattleError"
                },
                "id": {
                    "type": "string"
                },
                "mobile": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ok": {
                    "type": "boolean"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "Battleship API",
	Description: "Battleship API",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
